import os
import logging
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = os.getenv('BOT_TOKEN')

def start(update: Update, context: CallbackContext):
    keyboard = [
        ['üéÖ –°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É', 'üéÑ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ'],
        ['üìã –ú–æ–∏ –∏–≥—Ä—ã', '‚úèÔ∏è –ú–æ–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è', '‚ùì –ü–æ–º–æ—â—å']
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    
    update.message.reply_text(
        "üéÖ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¢–∞–π–Ω–æ–≥–æ –°–∞–Ω—Ç—É!*\n\n"
        "ü§ñ *–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!*\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )

def help_command(update: Update, context: CallbackContext):
    help_text = """
*üéÖ –¢–∞–π–Ω—ã–π –°–∞–Ω—Ç–∞ –ë–æ—Ç*

‚úÖ *–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∏—Å–ø—Ä–∞–≤–Ω–æ!*

*–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:*
üéÖ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
üéÑ –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –∫–Ω–æ–ø–∫–∞–º  
üìã –ë–∞–∑–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å

*–°–∫–æ—Ä–æ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã:*
‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä
‚Ä¢ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ –∏–≥—Ä–∞–º
‚Ä¢ –ñ–µ—Ä–µ–±—å–µ–≤–∫–∞
‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –ø–æ–∂–µ–ª–∞–Ω–∏–π

*–ö–æ–º–∞–Ω–¥—ã:*
/start - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

*–ü—Ä–∏—è—Ç–Ω–æ–π –∏–≥—Ä—ã!* üéÑ
    """
    update.message.reply_text(help_text, parse_mode='Markdown')

def handle_message(update: Update, context: CallbackContext):
    text = update.message.text
    
    if text == 'üéÖ –°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É':
        update.message.reply_text(
            "üéÖ *–°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä—ã*\n\n"
            "–§—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏!\n"
            "–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ üéÑ",
            parse_mode='Markdown'
        )
    elif text == 'üéÑ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ':
        update.message.reply_text(
            "üéÑ *–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ –∏–≥—Ä–µ*\n\n" 
            "–§—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏!\n"
            "–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ üéÅ",
            parse_mode='Markdown'
        )
    elif text == 'üìã –ú–æ–∏ –∏–≥—Ä—ã':
        update.message.reply_text(
            "üìã *–ú–æ–∏ –∏–≥—Ä—ã*\n\n"
            "–§—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏!",
            parse_mode='Markdown'
        )
    elif text == '‚úèÔ∏è –ú–æ–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è':
        update.message.reply_text(
            "‚úèÔ∏è *–ú–æ–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è*\n\n"
            "–§—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏!",
            parse_mode='Markdown'
        )
    elif text == '‚ùì –ü–æ–º–æ—â—å':
        help_command(update, context)
    else:
        update.message.reply_text(
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ /start",
            reply_markup=ReplyKeyboardMarkup([['/start']], resize_keyboard=True)
        )

def main():
    print("=" * 50)
    print("üöÄ –ó–ê–ü–£–°–ö –ë–û–¢–ê –¢–ê–ô–ù–û–ì–û –°–ê–ù–¢–´")
    print("=" * 50)
    
    if not BOT_TOKEN:
        print("‚ùå –û–®–ò–ë–ö–ê: BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ Railway")
        return
    
    print("‚úÖ BOT_TOKEN –Ω–∞–π–¥–µ–Ω")
    
    try:
        # –°–æ–∑–¥–∞–µ–º Updater (—Å—Ç–∞—Ä—ã–π —Å—Ç–∏–ª—å, –Ω–æ —Å—Ç–∞–±–∏–ª—å–Ω—ã–π)
        updater = Updater(BOT_TOKEN, use_context=True)
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä
        dp = updater.dispatcher
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        dp.add_handler(CommandHandler("start", start))
        dp.add_handler(CommandHandler("help", help_command))
        dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))
        
        print("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        print("üéÖ –ó–∞–ø—É—Å–∫–∞—é polling...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        updater.start_polling()
        print("ü§ñ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print("üí´ –û–∂–∏–¥–∞—é —Å–æ–æ–±—â–µ–Ω–∏—è...")
        
        # –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–∫–∞ –Ω–µ –æ—Å—Ç–∞–Ω–æ–≤–∏–º
        updater.idle()
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    main()
